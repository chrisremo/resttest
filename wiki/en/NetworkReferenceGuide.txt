! ネットワーク リファレンス ガイド

ネットワーキングは、非常に大きく、詳細なトピックです。  Unityでは、非常に簡単にネットワーク機能を作成できます。  しかし、それでもネットワーク ゲームの作成に関わる広がりや幅を理解することが最適です。  以降のページでは、ネットワーキング コンセプトの基本原理、およびこれらのコンセプトを使用する際の Unity 固有の実行について説明します。  これまでネットワーク ゲームの作成経験がない場合は、作成前に本書をよくお読みになることを強くお勧めします。

!! [[net-HighLevelOverview | High Level Overview]]

本項では、ネットワーキングに関わるすべてのコンセプトの概要を述べます。 より詳細なトピックの導入部となります。


!! [[net-UnityNetworkElements | Networking Elements in Unity]]

本ガイドの本項では、上記の考えの Unity での実行について記載されています。


!! [[net-NetworkView | Network View]]

ネットワーク ビューは、ネットワーク上でデータを共有するのに使用されるコンポーネントです。  これは理解する必要があります。  このページで詳細に説明します。


!! [[net-RPCDetails | RPC Details]]

RPC は、遠隔手続呼び出し (Remote Procedure Call) の略です。  これは、リモート マシンでの関数の呼び出し方法です。  これは、クライアントによるサーバー上の関数の呼び出し、またはサーバーによるすべてまたは特定のクライアント上の関数の呼び出しのいずれかになります。本ページでは、RPC の詳細について説明します。


!! [[net-StateSynchronization | State Synchronization]]

State Synchronization は、ネットワーク上で実行している 2 つ以上のゲーム インスタンスで特定のデータ セットを通常更新する方法です。


!! [[net-NetworkInstantiate | Network Instantiate]]

ネットワーキングに関して難しい課題の 1 つは、オブジェクトの所有です。  誰が何をコントロールしますか?  Network Instantiation によってこのロジックが決まります。  このページでは、その方法について説明します。  より多くのコントロールが必要な場合における、複雑な代替手段についても説明します。


!! [[net-MasterServer | Master Server]]

マスター サーバーは、サーバーがクライアントにその存在を宣伝できるゲーム ロビーのようなものです。 また、ファイアウォールまたは自宅でのネットワークからの通信を可能にする解決法でもあります。  必要な場合、NAT punchthrough という手法を使用して (ファシリテータの支援を受け)、プレイヤーが相互に常時接続できるようにすることもできます。  本ページでは、マスター サーバーの使用方法について説明します。


!! [[net-MinimizingBandwidth | Minimizing Bandwidth]]

データを共有する場所および方法を選択するたびに、ゲームが使用する帯域幅が影響を受けます。  本ページでは、帯域幅の使用の詳細および最小限に抑えるための方法を共有します。

!iOS!
>>ios<<
!! [[MobileNetworking | Special details about networking on iOS]]
iOS でのネットワーキングの起動
>><<
!Android!
>>android<<
!! [[MobileNetworking | Special details about networking on Android]]
>><<
