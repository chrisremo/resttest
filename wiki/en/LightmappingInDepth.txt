! ライトマッピング詳細

Unity で最初のシーンにライトマップ使用している場合、この [[Main.Lightmapping | Quickstart Guide]] が役に立つでしょう。

ライトマッピングは、Unity に完全に統合されているため、エディタ内からレベル全体を作成し、そのレベルにライトマップを行い、気にすることなく、マテリアルに自動的にライトマップを選択させることができます。 Unity でのライトマッピングは、パフォーマンス向上のため、すべてのライトのプロパティが Beast ライトマッパに直接マッピングされ、テクスチャにベークされるということです。 Unity Pro は、グローバル照明によってこの機能を拡張しますが、これにより、そうでない場合は、リアルタイムでは不可能な、よりリアルで美しいライティングをベークできます。 さらに、Unity Pro には、より素晴らしいシーン ライティングのためのスカイ ライトや発光マテリアルが用意されています。

このページでは、ライト マッピング ウィンドウにあるすべての属性の詳細な説明を記載します。 ライト マッピング ウィンドウを開くには、 __^^Window^^ &ndash; ^^Lightmapping^^__ を選択します。


Attach:LightmappingMain.png


!!Scene filters
At the top of the inspector are three ''Scene Filter'' buttons that enable you to apply the operation to all objects or to restrict it to lights or renderers.

!!オブジェクト
ライト、メッシュ レンダラおよび地形に対するオブジェクトごとのベーク設定 - 現在の選択内容によって決まります。

__メッシュ レンダラおよび地形:__

||PROPS
||``Lightmap Static``||メッシュ レンダラおよび地形は、ライトマッピングされるように、スタティックとしてマーキングする必要があります。||
||``Scale In Lightmap``||(メッシュ レンダラのみ) この値が大きいと、解像度が所定のメッシュ レンダラ専用になります。 最終的な解像度は比例します (ライトマップでのスケール)*(オブジェクトの世界空間表面エリア)*(グローバル ベーク設定解像度値)。 0 の値の場合、オブジェクトはライトマッピングされません (その他のライトマッピングされたオブジェクトには影響します)。 ||
||``Lightmap Size``||(地形のみ) この地形インスタンスのライトマップ サイズ。 地形は他のオブジェクトとして変更されません。代わりに、個々にライトマップされます。||
||``Atlas``||$$Lock Atlas$$ が無効になると、アトラスティング情報 &ndash; が自動的に更新されます。 $$Lock Atlas$$ が有効になると、これらのパラメータは自動的に編集されなくなり、手動で編集できます。 ||
||>>>``Lightmap Index``||ライトマップ配列への索引。||
||>>>``Tiling``||(メッシュ レンダラのみ) オブジェクトのライトマップ UV のタイリング。||
||>>>``Offset``||(メッシュ レンダラのみ) オブジェクトのライトマップ UV のオフセット。||

__ライト:__

||PROPS
||``Lightmapping``||ライトマッピング モード。 Realtime Only、Auto または Baked Only のいずれかになります。 下記の [[#DualLightmaps | Dual Lightmaps]] を参照してください。||
||``Color`` ||ライトの色。 リアルタイムのレンダリングに同じプロパティが使用されます。||
||``Intensity``||ライトの強度。 リアルタイムのレンダリングに同じプロパティが使用されます。||
||``Bounce Intensity``||この特定の光源から放出される間接的な光の強度への乗数。||
||``Baked Shadows``||シャドウがこのライトで照らされたオブジェクトから投影されるかどうかをコントロールします (自動ライトの場合と同時にリアルタイムのシャドウをコントロールします)。||
||>>>``Shadow Radius``||(ポイントおよびスポット ライトのみ) 柔らかい直接のシャドウの場合はこの値を上げます。シャドーイング (ライティングは対象外) 計算に対して、ライトのサイズを上げます。||
||>>>``Shadow Angle``||(ディレクショナル ライトのみ) (ポイントおよびスポット ライトのみ) 柔らかい直接のシャドウの場合はこの値を上げます。シャドーイング (ライティングは対象外) 計算に対して、ライトの角度範囲を上げます。||
||>>>``Shadow Samples``||上記の Shadow Radius または Angle を 0 に設定した場合、Shadow Samples の数も増します。 サンプル数が多いと、シャドウの半影からノイズが減りますが、レンダリング時間が増える場合があります。||


!!ベーク
グローバル ベーク設定

||PROPS
||``Mode``||オフラインのライトマップ ベーキングとリアルタイムのライトマップ レンダリング モードの両方をコントロールします。 Dual Lightmaps モードでは、近くおよび遠くのライトマップの両方がベークされ、遅延レンダリングパスのみ 2 重ライトマップのレンダリングをサポートします。 Single Lightmaps モードは、遠くのライトマップのみベークし、遅延レンダリング パスに対して、1 つのライトマップ モードを強制するのに使用できます。||
||``Use in forward rendering``||(Dual lightmaps only) Enables dual lightmaps in forward rendering. Note that this will require you to create your own shaders for the purpose.||
||``Quality``||ベークの質を高 （見た目が良くなります） および低 （高速） に設定します。 これらは、最終集光数、コントラスト閾値、その他の最終収集およびアンチエイリアス処理設定に影響します。||
||``Bounces``||グローバル照明シミュレーションでのライト バウンスの数。 柔らかく、リアルな間接ライティングを得るには、1 つ以上のバウンスが必要です。 0 の場合、直接光のみ計算されます。||
||``Sky Light Color``||スカイ ライトは、すべての方向に空から放出サれる光をシミュレートします。屋外のシーンに最適です。||
||``Sky Light Intensity``||スカイ ライトの強度。0 の場合、スカイ ライトは無効になります。||
||``Bounce Boost``||間接的な光を強化します。レンダリングを過剰に速くバーンアウトさせずに、シーン内で跳ね返りのライトの量を増やすのに使用できます。||
||``Bounce Intensity``||間接的な光の強度の乗数。||
||``Final Gather Rays``||すべての最後の集光点から放たれる光の数。値が高いほど、質が向上します。||
||``Contrast Threshold``||色コントラスト閾値。この上で、新しい最終集光点が適応サンプリング アルゴリズムによって作成されます。 値が高いほど、Beast の表面上の照明の変更に対する許容度が上がり、円滑ですが、細部の少ないライトマップが生成されます。 最終集光の数が少ないと、これ以上最終集光点が作成されないようにするため、高いコントラスト閾値が必要になる場合があります。||
||``Interpolation``||最終集光点からの色がどのように補間されるかをコントロールします。 0 は、線形補間、1 は高度な、階調度ベースの補間になります。 後者のほうがアーティファクトが増える場合があります。||
||``Interpolation Points``||間に補間される最終集光点の数。 値が高いほど、結果が円滑になりますが、ライティングでの細部も円滑になります。||
||``Ambient Occlusion``||ライトマップにベークされる周囲オクルージョンの量。 周囲オクルージョンはサイズ Max Distance のローカルな半球上で統合された表示関数のため、ライティング情報は考慮しません。||
||``Lock Atlas``||ロック アトラスが有効になると、自動アトラシングは実行されなくなり、オブジェクト上の Lightmap Index、Tiling および Offset は編集されなくなります。||
||``Resolution``||世界単位ごとのテクセルたんいのライトマップの解像度。50 の値と 10x10 の面の場合、ライトマップで面が 500x500 ピクセルを有する面になります。||
||``Padding`` ||The blank space left between individual items on the atlas, given in texel units (0..1). ||

!!マップ
すべてのライトマップの編集可能な配列。

||PROPS
||``Compressed``||このシーンに対するすべてのライトマップ上での圧縮を切り替えます。||
||``Array Size``||ライトマップのサイズ (0 〜 254)。||
||``Lightmaps Array``||現在のシーンでのすべてのライトマップの編集可能な配列。 割り当てていないスロットは黒いライトマップとして扱われます。 メッシュ レンダラと地形上のライトマップ インデックス値に対応したインデックス。 ロック アトラスが有効にならない限り、この配列は、自動でリサイズさ、ライトマップのベーク時に常に投入されます。||

!!ライトマップ ディスプレイ
エディタでのライトマップがどのように表示されるかをコントロールするユーティリティ。 ライトマップ ディスプレイ はシーン ビューのサブウィンドウで、ライトマッピング ウィンドウの表示時に毎回表示されます。

||PROPS
||``Use Lightmaps``||レンダリング中にライトマップを使用するかしないか。||
||``Shadow Distance``||Auto ライトと Close By ライトマップが Far Away ライトマップにフェードアウトする距離。 この設定は QualitySettings.shadowDistance 設定をク項にしますが、上書きはしません。||
||``Show Resolution``||シーン ビューのライトマップ解像度モードを切り替えます。これにより、スタティックとマーキングされたオブジェクトでライトマップのテクセルがどのように消費されるかをプレビューできます。||



!! 詳細


[[#DualLightmaps]]

!!! 二重ライトマップ

二重ライトマップは、ライトマッピングを__スペキュラ__、__法線マッピング__および__ベークされたおよびリアルタイムのシャドウの適切なブレンディングを連携させる Unity の手法です。 また、ライトマップ解像度が低くても、ライトマップの見た目を良くする方法もあります。

2 重ライトマップはデフォルトでは、[[Main.RenderingPaths | Deferred Lighting]] レンダリング パスでのみ使用できます。 フォワード レンダリング パスでは、カスタムのシェーダを記述することで、2 重ライトマップを有効に出来ます (@@[[SL-SurfaceShaders|dualforward]]@@ 表面シェーダ ディレクティブを使用します)。

2 重ライトマップは、次の 2 組みのライトマップを使用します。 
* __Far__: 完全な署名を含みます。
* __Near__:  __Auto__とマーキングされたライトからの間接照明、__Bake Only__とマーキングされたライトからの完全な照明、放射マテリアルおよびスカイ ライトを含みます。 

__Realtime Only__ ライトはベークされません。 __Near__ ライトマップ セットは、Shadow Distance 質設定よりもカメラからの距離内で使用されます。\\
この距離内では、__Auto__ライトは、スペキュラおよびリアルタイム シャドウのあるリアルタイム ライトとしてレンダリングされ (これにより、そのシャドウが Realtime Only ライトからのシャドウと正しくブレンドされます)、その間接的な光はライトマップから取られます。 Outside Shadow Distance __Auto__ ライトは、リアルタイムでレンダリングを行わなくなり、_完全な照明は、__Far__ライトマップから取られます (__Realtime Only__ライトはまだそこにありますが、シャドウは無効になります)。

下のシーンには、ライトマッピング モードがデフォルトの Auto に設定された  1 つのディレクショナル ライトと、多くのライトマップが適用されたスタティック オブジェクト （建物、障害物、動かせない細部） および一部の動的移動および可動オブジェクト （銃、銃身のあるダミー） が含まれます。 シーンは、2 重ライトマップ モードでベークおよびレンダリングされます。 シャドウ距離の裏では、ライトマップによってのみ建物が完全に照らされ、2 つのダミーは自動的に照らされますが、シャドウを投影しません。シャドウ距離の前では、両方のダミーとライトマップが適用されたスタティックな建物および地面がリアルタイムで照らされ、リアルタイムのシャドウを投影しますが、柔らかい間接的な光は近くのライトマップから放たれます。

Attach:DualLightmapsInAction.png

Attach:DualLightmapsInActionDetail.png

!!! シングル ライトマップ

シングル ライトマップははるかに簡単な手法ですが、どの [[Main.RenderingPaths | rendering path]] で使用できます。 すべてのスタティック照明 (つまり、ベーク済みのものと自動ライト、スカイ ライトおよび放射マテリアル) は 1 つのライトマップのセットにベークされます。 これらのライトマップは、シャドウの距離に関係なく、ライトマップが適用されたオブジェクトすべてに使用されます。

動的シャドウの強度をベークされたシャドウに一致させるには、ライトの''Shadow Strength''プロパティを手動で調整する必要があります。

Attach:SingleLightmapsShadow2.png Attach:SingleLightmapsShadow.png\\
''ライトのシャドウの強度を元の値 1.0 から、0.7 に調整''

!!! ライトマップが適用されたマテリアル:

Unity では、ライトマップに使用する特殊なマテリアルを使用する必要はありません。 組み込みシェーダからのシェーダ (およびその場合は、記述した表面シェーダ) は、木にする必要なく、ボックスからのライトマップをサポートしているので、ただ機能するだけです。

!!! ライトマップ解像度

''Resolution''ベーク設定により、見た目を良くするためにシーンに必要な単位ごとのテクセル数をコントロールできます。 シーンに 1x1 単位面があり、解像度を単位あたり 10 に設定すると、ライトマップで面が 10x10 テクセルを使用します。 解像度ベーク設定はグローバル設定です。 特殊なオブジェクトに対してこれを編集したい (ライトマップで非常に小さくまたは非常に大きくしたい) 場合、メッシュ レンダラの''Scale in Lightmap''プロパティを使用します。 ライトマップでスケールを 0 に設定すると、オブジェクトはライトマッピングされません (その他のオブジェクトのライトマップには影響します)。 ''Lightmap Resolution''シーン ビュー レンダー モードを使用すると、ライトマップ テクセルがどのように消費されるかをプレビューできます。

Attach:LightmapResolution40.png\\
''ライトマップ テクセルがどのように使用されるかを示すライトマップ解像度シーン ビュー (各正方形が 1 つのテクセル)。''

!!! UV

ライトマップしたいメッシュに、ライトマッピング用の適切な UV があることを確認してください。 最も簡単な方法は、所定のメッシュのメッシュ インポート設定で Generate Lightmap UVｓ オプションを有効にすることです。

詳細については、[[Main.LightmappingUV | Lightmap UVs]] ページを参照してください。

!!! マテリアル プロパティ

次のマテリアル プロパティが、Beast の内部シーン表示にマッピングされます。
* カラー
* ムービー テクスチャ
* スペキュラ色
* 輝かしさ
* 透明度
** アルファ ベース: 透明シェーダを使用すると、メイン テクスチャのアルファ チャンネルは透明度をコントロールします。
** 色ベース: Beast の RGB 透明度は、$$_TransparencyLM$$ というプロパティをシェーダに追加することで有効にできます。 この透明度は、アルファ ベースの透明度に比べ、逆方向に定義されます。 値 (1, 0, 0) のあるピクセルは、赤色のライト コンポーネントの場合完全に透明で、緑および青のコンポーネントの場合は完全に不透明になります。これにより、赤色の影が生じます。同じ理由で、白のテクスチャは完全に透明になり、黒のテクスチャは完全に不透明になります。
* 放出
** 自己発光マテリアルは色およびメイン テクスチャで色のついた光を放ち、照明テクスチャでマスクされます。 放出された光の強度は、放出プロパティに比例します (0 は放出を無効にします)。
** 一般に大きくて、ぼんやりとした光源は、放出マテリアルのあるオブジェクトとしてモデリングできます。 放出マテリアルはレンダリング時にノイズを生じる場合があるので、小さくて、強い光の場合、法線ライト タイプを使用する必要があります。

''注意: Beast にマテリアルをマッピングすると、Unity は、シェーダのプロパティおよび''スペキュラ''、''透明さ''、''自己発光''などのパス/名前キーワードによって  シェーダの''種類''を検出します。

!!! Skinned Mesh Renderers
Having skinned meshes that are static makes your content more flexible, since the shape of those meshes can be changed in Unity after import and can be tweaked per level. Skinned Mesh Renderers can be lightmapped in exactly the same way as Mesh Renderers and are sent to the lightmapper in their current pose.

Lightmapping can also be used if the vertices of a mesh are moved at runtime a bit -- the lighting won't be completely accurate, but in a lot of cases it will match well enough.


!! 詳細

!!! 自動アトラシング

アトラシング (UV パッキング) は、ベークを行う際に毎回自動的に実行されるので、通常は気にする必要はありません。ただ機能するだけです。

オブジェクトの世界空間の表面エリアはオブジェクトごとの Scale In Lightmap 値よって乗算され、、グローバル解像度と結果によって、ライトマップでのオブジェクトの UV セットのサイズを決定します (より正確には: [0,1]x[0,1] UV 正方形のサイズ)。 次に、すべてのオブジェクトは、極力少ない数のライトマップにパックされ、それぞれが前のステップで計算された空間量を占めるようにします。 所定のオブジェクトに対する UV セットが [0,1]x[0,1] 正方形の部分のみ占める場合、ほとんどの場合、アトラシングは、近隣の UV セットを近くに移動させ、開いている空間を使用します。

アトラシングの結果、ライトマップが適用されるすべてのオブジェクトがライトマップのいずれかにその場所を持ち、どの空間はその他のオブジェクトの空間に重なりません。 アトラシング情報は、メッシュ レンダラの ライトマップ インデックス、タイリング (スケール)、オフセットの 3 つの値として、 地形でのライトマップ インデックスとして格納され、 ライトマッピング ウィンドウのオブジェクト ペインを介して、表示および編集できます。

Attach:LightmapUsers40.png\\
''ライトマップを右クリックすると、選択したライトマップを使用しているすべてのゲーム オブジェクトを選択できます。'' 現在の選択内容からのアクティブなオブジェクトのライトマップは黄色で強調表示されます。''

Atlasing は、Lightmap Index、Tiling および Offset であるオブジェクトごとのデータのみ編集可能で、 オブジェクトの UV セットは、共有されたメッシュの部分として格納されるため、編集できません。 メッシュの Lightmap UV は、インポート時にのみ、Unity の組み込み自動ラッパーを使用して、または Unity 外部 3D パッケージでのみ作成できます。

!!! Lock Atlas

Lock Atlas が有効になると、自動アトラシングは実行されなくなり、オブジェクト上の Lightmap Index、Tiling および Offset は編集されなくなります。 Beast は、現在のアトラシングであるものに依存しているため、ユーザーが行うのは、正しいアトラシングの維持のみになります （例えば、ライトマップでのラッピング オブジェクトなし、ライトマップ配列の端を過ぎた、ライトマップ スロットを参照するオブジェクトなし）。

Lock Atlas は、ライトマッピングのためのオブジェクトの送信時の別のワークフローの可能性を開きます。 手動またはスクリプティングを介して、特定のニーズに合うよう、アトラシングを実行できます。また、現在のアトラシングに満足し、シーンに対してより多くのライトマップの接テオをベークし、シーンに更にオブジェクトを追加した後に、アトラシングがその他のライトマップ セットとの互換性を持たせないようにしたい場合、自動生成されたアトラシングをロックできます。

Lock Atlas は、アトラシングのみロックし、メッシュの UV はしません。 ソース メッシュを変更し、メッシュ インポータをライトマップ UV を生成するよう設定すると、UV が異なる形で生成され、現在のライトマップがオブジェクトで正しく表示されません。これを修復するには、ライトマップを再ベークする必要があります。

!!!カスタムの Beast ベーク設定

ベーク処理をよりコントロールしたい場合は、 [[LightmappingCustomSettings | custom Beast settings]] ページを参照してください。
